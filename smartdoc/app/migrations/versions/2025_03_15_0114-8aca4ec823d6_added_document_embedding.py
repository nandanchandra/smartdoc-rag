"""Added document embedding

Revision ID: 8aca4ec823d6
Revises: f1882bc23a1d
Create Date: 2025-03-15 01:14:58.205971

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
import pgvector.sqlalchemy




# revision identifiers, used by Alembic.
revision: str = '8aca4ec823d6'
down_revision: Union[str, None] = 'f1882bc23a1d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE EXTENSION IF NOT EXISTS vector;")
    op.create_table('documentembedding',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=4096), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_id', 'document', ['user_id'], unique=False)
    op.create_index(op.f('ix_document_user_id'), 'document', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_document_user_id'), table_name='document')
    op.drop_index('idx_user_id', table_name='document')
    op.drop_table('documentembedding')
    # ### end Alembic commands ###
